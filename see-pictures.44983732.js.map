{"mappings":"AAAA,MAAM,UAAU;AAChB,MAAM,WAAW;AACjB,IAAI,cAAc;AAClB,IAAI,eAAe;AAEnB,MAAM,OAAO,SAAS,cAAc,CAAC;AACrC,MAAM,UAAU,SAAS,cAAc,CAAC;AACxC,MAAM,cAAc,SAAS,cAAc,CAAC;AAE5C,KAAK,gBAAgB,CAAC,UAAU;AAChC,YAAY,gBAAgB,CAAC,SAAS;AAEtC,eAAe,YAAY,KAAK,EAAE,OAAO,CAAC;IACxC,MAAM,MAAM,GAAG,SAAS,KAAK,EAAE,QAAQ,GAAG,EAAE,mBAAmB,OAAO,0DAA0D,EAAE,MAAM;IACxI,IAAI;QACF,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,EAAE,EACd,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAE1D,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,KAAK,IAAI;IAClB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,EAAE;IACX;AACF;AAEA,eAAe,SAAS,KAAK;IAC3B,MAAM,cAAc;IACpB,MAAM,QAAQ,MAAM,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI;IACpD,IAAI,CAAC,OAAO;IAEZ,eAAe;IACf,cAAc;IACd,QAAQ,SAAS,GAAG;IACpB,MAAM,SAAS,MAAM,YAAY,cAAc;IAC/C,aAAa;IACb,YAAY,KAAK,CAAC,OAAO,GAAG,OAAO,MAAM,GAAG,KAAK,SAAS;AAC5D;AAEA,eAAe;IACb,eAAe;IACf,MAAM,SAAS,MAAM,YAAY,cAAc;IAC/C,aAAa;IAEb,MAAM,WAAW,QAAQ,gBAAgB;IACzC,IAAI,UACF,SAAS,cAAc,CAAC;QAAE,UAAU;QAAU,OAAO;IAAM;IAG7D,YAAY,KAAK,CAAC,OAAO,GAAG,OAAO,MAAM,GAAG,KAAK,SAAS;AAC5D;AAEA,SAAS,aAAa,MAAM;IAC1B,MAAM,SAAS,OAAO,GAAG,CAAC,CAAA,MAAO,CAAC;;;kBAGlB,EAAE,IAAI,YAAY,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC;;;kDAGL,EAAE,IAAI,KAAK,CAAC;;;oDAGV,EAAE,IAAI,KAAK,CAAC;;;iDAGf,EAAE,IAAI,QAAQ,CAAC;;;wDAGR,EAAE,IAAI,SAAS,CAAC;;;;;EAKtE,CAAC,EAAE,IAAI,CAAC;IAER,QAAQ,kBAAkB,CAAC,aAAa;AAC1C","sources":["src/script.js"],"sourcesContent":["const API_KEY = '50870503-c2d8068ee53ef019121c927e8';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nlet currentPage = 1;\r\nlet currentQuery = '';\r\n\r\nconst form = document.getElementById('search-form');\r\nconst gallery = document.getElementById('gallery');\r\nconst loadMoreBtn = document.getElementById('load-more');\r\n\r\nform.addEventListener('submit', onSearch);\r\nloadMoreBtn.addEventListener('click', onLoadMore);\r\n\r\nasync function fetchImages(query, page = 1) {\r\n  const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&per_page=12&page=${page}`;\r\n  try {\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data.hits;\r\n  } catch (error) {\r\n    console.error('Error fetching images:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nasync function onSearch(event) {\r\n  event.preventDefault();\r\n  const query = event.target.elements.query.value.trim();\r\n  if (!query) return;\r\n\r\n  currentQuery = query;\r\n  currentPage = 1;\r\n  gallery.innerHTML = '';\r\n  const images = await fetchImages(currentQuery, currentPage);\r\n  renderImages(images);\r\n  loadMoreBtn.style.display = images.length < 12 ? 'none' : 'block';\r\n}\r\n\r\nasync function onLoadMore() {\r\n  currentPage += 1;\r\n  const images = await fetchImages(currentQuery, currentPage);\r\n  renderImages(images);\r\n\r\n  const lastCard = gallery.lastElementChild;\r\n  if (lastCard) {\r\n    lastCard.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n  }\r\n\r\n  loadMoreBtn.style.display = images.length < 12 ? 'none' : 'block';\r\n}\r\n\r\nfunction renderImages(images) {\r\n  const markup = images.map(img => `\r\n    <li>\r\n      <div class=\"photo-card\">\r\n        <img src=\"${img.webformatURL}\" alt=\"${img.tags}\" loading=\"lazy\" />\r\n        <div class=\"stats\">\r\n          <p class=\"stats-item\">\r\n            <i class=\"material-icons\">thumb_up</i>${img.likes}\r\n          </p>\r\n          <p class=\"stats-item\">\r\n            <i class=\"material-icons\">visibility</i>${img.views}\r\n          </p>\r\n          <p class=\"stats-item\">\r\n            <i class=\"material-icons\">comment</i>${img.comments}\r\n          </p>\r\n          <p class=\"stats-item\">\r\n            <i class=\"material-icons\">cloud_download</i>${img.downloads}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  `).join('');\r\n\r\n  gallery.insertAdjacentHTML('beforeend', markup);\r\n}\r\n"],"names":[],"version":3,"file":"see-pictures.44983732.js.map","sourceRoot":"/__parcel_source_root/"}