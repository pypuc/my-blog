{"mappings":"ACAA,IAAM,QAAU,uBACV,SAAW,2BACb,YAAc,EACd,aAAe,GAEb,KAAO,SAAS,cAAc,CAAC,eAC/B,QAAU,SAAS,cAAc,CAAC,WAClC,YAAc,SAAS,cAAc,CAAC,aAK5C,eAAe,YAAY,CAAK,CAAE,EAAO,CAAC,EACxC,IAAM,EAAM,uDAAgC,mBAC1C,+DAC4D,GAAM,CACpE,GAAI,CACF,IAAM,EAAM,MAAM,MAAM,GAExB,MAAO,AADM,CAAA,MAAM,EAAI,IAAI,EAA3B,EACY,IAAI,AAClB,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,yBAA0B,GACjC,EAAE,AACX,CACF,CAEA,eAAe,SAAS,CAAC,EACvB,EAAE,cAAc,GAChB,IAAM,EAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAChD,GAAI,CAAC,EAAO,OAEZ,aAAe,EACf,YAAc,EACd,QAAQ,SAAS,CAAG,GACpB,IAAM,EAAS,MAAM,YAAY,EAAO,aACxC,aAAa,GACb,YAAY,KAAK,CAAC,OAAO,CAAG,EAAO,MAAM,CAAG,GAAK,OAAS,OAC5D,CAEA,eAAe,aACb,aAAe,EACf,IAAM,EAAS,MAAM,YAAY,aAAc,aAC/C,aAAa,GAGb,IAAM,EAAW,QAAQ,gBAAgB,AACrC,CAAA,GACF,EAAS,cAAc,CAAC,CAAE,SAAU,SAAU,MAAO,KAAM,GAG7D,YAAY,KAAK,CAAC,OAAO,CAAG,EAAO,MAAM,CAAG,GAAK,OAAS,OAC5D,CAEA,SAAS,aAAa,CAAM,EAC1B,IAAM,EAAS,EACZ,GAAG,CACF,AAAA,GAAO;A;A;AAGK,kBAAA,EAAE,EAAI,YAAY,CAAC,OAAO,EAAE,EAAI,IAAI,CAAC;A;A;AAGL,kDAAA,EAAE,EAAI,KAAK;A;A;AAGT,oDAAA,EAAE,EAAI,KAAK;A;A;AAGd,iDAAA,EAAE,EAAI,QAAQ;A;A;AAGP,wDAAA,EAAE,EAAI,SAAS;A;A;A;A;AAKrE,EAAA,CAAC,EAEE,IAAI,CAAC,IACR,QAAQ,kBAAkB,CAAC,YAAa,EAC1C,CAvEA,KAAK,gBAAgB,CAAC,SAAU,UAChC,YAAY,gBAAgB,CAAC,QAAS","sources":["<anon>","src/script.js"],"sourcesContent":["const API_KEY = 'YOUR_PIXABAY_API_KEY';\nconst BASE_URL = 'https://pixabay.com/api/';\nlet currentPage = 1;\nlet currentQuery = '';\nconst form = document.getElementById('search-form');\nconst gallery = document.getElementById('gallery');\nconst loadMoreBtn = document.getElementById('load-more');\nform.addEventListener('submit', onSearch);\nloadMoreBtn.addEventListener('click', onLoadMore);\nasync function fetchImages(query, page = 1) {\n    const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&per_page=12&page=${page}`;\n    try {\n        const res = await fetch(url);\n        const data = await res.json();\n        return data.hits;\n    } catch (error) {\n        console.error('Error fetching images:', error);\n        return [];\n    }\n}\nasync function onSearch(e) {\n    e.preventDefault();\n    const query = e.target.elements.query.value.trim();\n    if (!query) return;\n    currentQuery = query;\n    currentPage = 1;\n    gallery.innerHTML = '';\n    const images = await fetchImages(query, currentPage);\n    renderImages(images);\n    loadMoreBtn.style.display = images.length < 12 ? 'none' : 'block';\n}\nasync function onLoadMore() {\n    currentPage += 1;\n    const images = await fetchImages(currentQuery, currentPage);\n    renderImages(images);\n    // Плавний скрол до нових елементів\n    const lastCard = gallery.lastElementChild;\n    if (lastCard) lastCard.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end'\n    });\n    loadMoreBtn.style.display = images.length < 12 ? 'none' : 'block';\n}\nfunction renderImages(images) {\n    const markup = images.map((img)=>`\n    <li>\n      <div class=\"photo-card\">\n        <img src=\"${img.webformatURL}\" alt=\"${img.tags}\" loading=\"lazy\" />\n        <div class=\"stats\">\n          <p class=\"stats-item\">\n            <i class=\"material-icons\">thumb_up</i>${img.likes}\n          </p>\n          <p class=\"stats-item\">\n            <i class=\"material-icons\">visibility</i>${img.views}\n          </p>\n          <p class=\"stats-item\">\n            <i class=\"material-icons\">comment</i>${img.comments}\n          </p>\n          <p class=\"stats-item\">\n            <i class=\"material-icons\">cloud_download</i>${img.downloads}\n          </p>\n        </div>\n      </div>\n    </li>\n  `).join('');\n    gallery.insertAdjacentHTML('beforeend', markup);\n}\n\n//# sourceMappingURL=see-pictures.9a34ec52.js.map\n","const API_KEY = 'YOUR_PIXABAY_API_KEY';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nlet currentPage = 1;\r\nlet currentQuery = '';\r\n\r\nconst form = document.getElementById('search-form');\r\nconst gallery = document.getElementById('gallery');\r\nconst loadMoreBtn = document.getElementById('load-more');\r\n\r\nform.addEventListener('submit', onSearch);\r\nloadMoreBtn.addEventListener('click', onLoadMore);\r\n\r\nasync function fetchImages(query, page = 1) {\r\n  const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(\r\n    query\r\n  )}&image_type=photo&orientation=horizontal&per_page=12&page=${page}`;\r\n  try {\r\n    const res = await fetch(url);\r\n    const data = await res.json();\r\n    return data.hits;\r\n  } catch (error) {\r\n    console.error('Error fetching images:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nasync function onSearch(e) {\r\n  e.preventDefault();\r\n  const query = e.target.elements.query.value.trim();\r\n  if (!query) return;\r\n\r\n  currentQuery = query;\r\n  currentPage = 1;\r\n  gallery.innerHTML = '';\r\n  const images = await fetchImages(query, currentPage);\r\n  renderImages(images);\r\n  loadMoreBtn.style.display = images.length < 12 ? 'none' : 'block';\r\n}\r\n\r\nasync function onLoadMore() {\r\n  currentPage += 1;\r\n  const images = await fetchImages(currentQuery, currentPage);\r\n  renderImages(images);\r\n\r\n  // Плавний скрол до нових елементів\r\n  const lastCard = gallery.lastElementChild;\r\n  if (lastCard) {\r\n    lastCard.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n  }\r\n\r\n  loadMoreBtn.style.display = images.length < 12 ? 'none' : 'block';\r\n}\r\n\r\nfunction renderImages(images) {\r\n  const markup = images\r\n    .map(\r\n      img => `\r\n    <li>\r\n      <div class=\"photo-card\">\r\n        <img src=\"${img.webformatURL}\" alt=\"${img.tags}\" loading=\"lazy\" />\r\n        <div class=\"stats\">\r\n          <p class=\"stats-item\">\r\n            <i class=\"material-icons\">thumb_up</i>${img.likes}\r\n          </p>\r\n          <p class=\"stats-item\">\r\n            <i class=\"material-icons\">visibility</i>${img.views}\r\n          </p>\r\n          <p class=\"stats-item\">\r\n            <i class=\"material-icons\">comment</i>${img.comments}\r\n          </p>\r\n          <p class=\"stats-item\">\r\n            <i class=\"material-icons\">cloud_download</i>${img.downloads}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  `\r\n    )\r\n    .join('');\r\n  gallery.insertAdjacentHTML('beforeend', markup);\r\n}\r\n"],"names":["API_KEY","BASE_URL","currentPage","currentQuery","form","document","getElementById","gallery","loadMoreBtn","fetchImages","query","page","url","encodeURIComponent","res","fetch","data","json","hits","error","console","onSearch","e","preventDefault","target","elements","value","trim","innerHTML","images","renderImages","style","display","length","onLoadMore","lastCard","lastElementChild","scrollIntoView","behavior","block","markup","map","img","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","addEventListener"],"version":3,"file":"see-pictures.9a34ec52.js.map"}